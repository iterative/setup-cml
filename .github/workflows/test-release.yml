name: Test & Release
on:
  release:
    types:
      - published
      - edited
  schedule:
    - cron: 0 0 * * *
  pull_request:
jobs:
  test:
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        system:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        include:
          - system: ubuntu-18.04
            container: ubuntu:18.04
    runs-on: ${{ matrix.system }}
    container: ${{ matrix.container }}
    steps:
      - name: install deps
        if: matrix.container == 'ubuntu:18.04'
        run: |
          apt update
          apt install -y software-properties-common
          add-apt-repository ppa:git-core/ppa
          apt update
          apt install -y git fontconfig make gcc pkg-config
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        if:
          matrix.container == 'ubuntu:18.04' || matrix.system ==
          'windows-latest'
        with:
          node-version: '12'
      - run: npm ci
      - run: npm run lint
      - run: npm run test
      - name: local action with '0.3.0'
        uses: ./
        with:
          version: '0.3.0'
      - name: test CML specific version
        if: matrix.system != 'windows-latest'
        run: |
          CML_VER="$(cml-publish --version 2>&1)"
          if [ "$CML_VER" != '0.3.0' ]; then
            exit 1
          fi
      - name: local action with defaults
        uses: ./
      - name: test CML latest version
        if: matrix.system != 'windows-latest'
        run: |
          CML_VER="$(cml-publish --version 2>&1)"
          if [ "$CML_VER" == '0.3.0' ]; then
            exit 1
          fi
      - name: test CML
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo 'Hello CML from ${{ matrix.system }}!' > report.md

          vl2svg assets/vega-lite.json | cml-publish --md >> report.md
          vl2png assets/vega-lite.json | cml-publish --md >> report.md

          cml-send-comment report.md
          cml-send-github-check report.md
  release:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    steps:
      - name: tag action release
        uses: Actions-R-Us/actions-tagger@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          publish_latest_tag: true
